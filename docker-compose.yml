version: '3.8'

services:
  # Flask应用服务
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    restart: unless-stopped
    networks:
      - octopus-network

  # 数据库服务
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-octopus}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - octopus-network

  # Redis缓存服务
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - octopus-network

  # Elasticsearch服务
  elasticsearch:
    image: elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - octopus-network

  # Celery Worker服务
  celery_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - app
      - redis
    restart: unless-stopped
    networks:
      - octopus-network

  # Celery Beat服务（定时任务）
  celery_beat:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.celery beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - app
      - redis
    restart: unless-stopped
    networks:
      - octopus-network

  # Flower监控服务
  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A app.celery flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - app
      - redis
      - celery_worker
    restart: unless-stopped
    networks:
      - octopus-network

networks:
  octopus-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: 